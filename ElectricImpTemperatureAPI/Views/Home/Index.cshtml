@model ElectricImpTemperatureAPI.ViewModels.HomeViewModel

<div class="jumbotron">
    <h1>@DateTime.UtcNow.ToString("dd MMM yyyy")</h1>

</div>
<div class="row">
    <div class="col-md-12">
        <h2>Latest Readings</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Room</th>
                    <th>Temperature</th>
                    <th>Time</th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>Maple's Bedroom</td>
                    @if (Model.MapleTemperatureReading != null)
                    {
                        <td>@Model.MapleTemperatureReading.Temperature&#176C</td>
                        <td>@Model.MapleTemperatureReading.UkTimeStamp.ToString("HH:mm")</td>
                    }
                    else
                    {
                        <td>No record available</td>
                        <td></td>
                    }

                </tr>

                <tr>
                    <td>Kitchen</td>
                    @if (Model.NestTemperatureReading != null)
                    {
                        <td>@Model.NestTemperatureReading.Temperature&#176C</td>
                        <td>@Model.NestTemperatureReading.UkTimeStamp.ToString("HH:mm")</td>
                    }
                    else
                    {
                        <td>No record available</td>
                        <td></td>
                    }

                </tr>

                <tr>
                    <td>Sun Room</td>
                    @if (Model.RaspberryPiTemperatureReading != null)
                    {
                        <td>@Model.RaspberryPiTemperatureReading.Temperature&#176C</td>
                        <td>@Model.RaspberryPiTemperatureReading.UkTimeStamp.ToString("HH:mm")</td>
                    }
                    else
                    {
                        <td>No record available</td>
                        <td></td>
                    }

                </tr>

            </tbody>







        </table>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h2>Last 3 Hours</h2>
        <i id="last3hoursspinner" class="fa fa-refresh fa-spin fa-3x"></i>
        <canvas id="3HourChart" width="400" height="100"></canvas>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h2>Today</h2>
        <i id="todayspinner" class="fa fa-refresh fa-spin fa-3x"></i>
        <canvas id="todayChart" width="400" height="100"></canvas>
    </div>
</div>



<h2>Today's Record Temperatures</h2>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Room</th>
            <th>Low</th>
            <th>High</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Maple's Bedroom</td>
                @if (Model.LowestMapleTemperatureReadingToday != null)
                {
                    <td>@Model.LowestMapleTemperatureReadingToday.Temperature&#176C</td>
                }
                else
                {   
                    <td>No record available</td>
                }
                @if (Model.HighestMapleTemperatureReadingToday != null)
                {
                    <td>@Model.HighestMapleTemperatureReadingToday.Temperature&#176C</td>
                }
                else
                {
                    <td>No record available</td>
                }
        </tr>
        <tr>
            <td>Kitchen</td>
            @if (Model.LowestNestTemperatureReadingToday != null)
            {
                <td>@Model.LowestNestTemperatureReadingToday.Temperature&#176C</td>
            }
            else
            {
                <td>No record available</td>
            }
            @if (Model.HighestNestTemperatureReadingToday != null)
            {
                <td>@Model.HighestNestTemperatureReadingToday.Temperature&#176C</td>
            }
            else
            {
                <td>No record available</td>
            }
          
        </tr>
        <tr>
            <td>Sun room</td>
            @if (Model.LowestRaspberryPiTemperatureReadingToday != null)
            {
                <td>@Model.LowestRaspberryPiTemperatureReadingToday.Temperature&#176C</td>
            }
            else
            {
                <td>No record available</td>
            }
            @if (Model.HighestRaspberryPiTemperatureReadingToday != null)
            {
                <td>@Model.HighestRaspberryPiTemperatureReadingToday.Temperature&#176C</td>
            }
            else
            {
                <td>No record available</td>
            }
        </tr>
    </tbody>
</table>

<h2>This Months Record Temperatures</h2>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Room</th>
            <th>Low</th>
            <th>Date</th>
            <th>High</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Maple's Bedroom</td>
            <td>@Model.LowestMapleTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.LowestMapleTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestMapleTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.HighestMapleTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
        <tr>
            <td>Kitchen</td>
            <td>@Model.LowestNestTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.LowestNestTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestNestTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.HighestNestTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
        <tr>
            <td>Sun room</td>
            <td>@Model.LowestRaspberryPiTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.LowestRaspberryPiTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestRaspberryPiTemperatureReadingThisMonth.Temperature&#176C</td>
            <td>@Model.HighestRaspberryPiTemperatureReadingThisMonth.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
    </tbody>
</table>

<h2>All Time Record Temperatures</h2>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Room</th>
            <th>Low</th>
            <th>Date</th>
            <th>High</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Maple's Bedroom</td>
            <td>@Model.LowestMapleTemperatureReading.Temperature&#176C</td>
            <td>@Model.LowestMapleTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestMapleTemperatureReading.Temperature&#176C</td>
            <td>@Model.HighestMapleTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
        <tr>
            <td>Kitchen</td>
            <td>@Model.LowestNestTemperatureReading.Temperature&#176C</td>
            <td>@Model.LowestNestTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestNestTemperatureReading.Temperature&#176C</td>
            <td>@Model.HighestNestTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
        <tr>
            <td>Sun room</td>
            <td>@Model.LowestRaspberryPiTemperatureReading.Temperature&#176C</td>
            <td>@Model.LowestRaspberryPiTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
            <td>@Model.HighestRaspberryPiTemperatureReading.Temperature&#176C</td>
            <td>@Model.HighestRaspberryPiTemperatureReading.UkTimeStamp.ToString("dd/MM/yyyy")</td>
        </tr>
    </tbody>
</table>


        @section Scripts {
            <script>
                Chart.defaults.global.responsive = true;
                var options = {
                    bezierCurve: true,
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"
                };

                $.ajax({
                    type: "GET",
                    cache: false,
                    url: "/chart/last3hours",
                    success: function (data) {
                        // Get the context of the canvas element we want to select
                        var ctx = document.getElementById("3HourChart").getContext("2d");
                        var myLineChart = new Chart(ctx).Line(data, options);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    },
                    complete: function () {
                        $('#last3hoursspinner').hide();
                    }
                });

                $.ajax({
                    type: "GET",
                    cache: false,
                    url: "/chart/today",
                    success: function (data) {
                        // Get the context of the canvas element we want to select
                        var ctx = document.getElementById("todayChart").getContext("2d");
                        var myLineChart = new Chart(ctx).Line(data, options);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    },
                    complete: function () {
                        $('#todayspinner').hide();
                    }
                });

            </script>
        }

